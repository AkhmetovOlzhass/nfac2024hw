"use strict";
var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
Object.defineProperty(exports, "__esModule", { value: true });
const express_1 = require("express");
const songs_controller_1 = __importDefault(require("./songs-controller"));
const songs_service_1 = __importDefault(require("./songs-service"));
const multer_1 = __importDefault(require("multer"));
const songRouter = (0, express_1.Router)();
const songsService = new songs_service_1.default();
const songsController = new songs_controller_1.default(songsService);
const upload = (0, multer_1.default)({ storage: multer_1.default.memoryStorage() });
songRouter.get('/playlists', (req, res) => songsController.getAllPlaylists(req, res));
songRouter.post('/upload', upload.fields([{ name: 'song', maxCount: 1 }, { name: 'coverImage', maxCount: 1 }]), (req, res) => songsController.createSong(req, res));
songRouter.get('/songs', (req, res) => songsController.getAllSongs(req, res));
songRouter.get('/:id', (req, res) => songsController.getSongsById(req, res));
songRouter.delete('/:id', (req, res) => songsController.deleteSong(req, res));
songRouter.put('/:id', upload.fields([{ name: 'song', maxCount: 1 }, { name: 'coverImage', maxCount: 1 }]), (req, res) => songsController.updateSong(req, res));
songRouter.post('/playlist', upload.single('playlistCover'), (req, res) => songsController.createPlaylist(req, res));
songRouter.put('/:playlistId/add-song', (req, res) => songsController.updatePlaylist(req, res));
songRouter.get('/playlist/:id', (req, res) => songsController.getSongById(req, res));
songRouter.put('/:id/favorite', (req, res) => songsController.addToFavorite(req, res));
exports.default = songRouter;
